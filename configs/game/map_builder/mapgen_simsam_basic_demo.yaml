_target_: mettagrid.map.mapgen.MapGen

width: ${int:${uniform:20,101}}
height: ${int:${uniform:20,101}}

root:
  _target_: mettagrid.map.scenes.room_grid.RoomGrid
  rows: 1
  columns: 1

  children:
  - scene:
      _target_: mettagrid.map.scenes.simplex_sampler.SimplexSampler
      layers: # list of layers with sampling functions that will be combined to produce terrain grid
      - sampling_function : mettagrid.map.scenes.simsam_functions.xy_noise # first function, yaml files contain simple strings of addresses. Later im simplex_sampler, hydra will initialize them into actual Callable functions
        saturation: 2.7182818 # values for each parameter is either fixed
        function_parameters:
          x_zoom: ${uniform:0.1,1.25} # or generated with according resolver function located at /mettagrid/mettagrid/resolvers.py
          y_zoom: ${triangular:1,2,10}                                  
      - sampling_function : mettagrid.map.scenes.simsam_functions.squeezed_noise # second function address, though the order doesn't matter
        saturation: ${uniform:0.0,0.5}
        function_parameters:
          zoom: ${uniform:0.01,2.5}                                
          squeeze: ${uniform:1,10}                                  
          angle_theta: ${uniform:0,1}                              
      - sampling_function : mettagrid.map.scenes.simsam_functions.arbitrary_tilted_napkin # third function address
        saturation: ${choose:1.9,2.0,2.1,2.2,2.3,2.4,2.5,3.0,4.0}
        function_parameters:
          x_zoom: ${uniform:1,3}                                           
          y_zoom: ${uniform:1,3}                                               
          angle_theta: 0                                                      
          line1_wavelength: ${int:${uniform:2,16}}                             
          line2_wavelength: ${int:${uniform:2,16}}                              
          line1_thickness: ${choose:1,2}                                        
          line2_thickness: ${choose:1,2}                                        
      

      cutoff: ${uniform:40,100} # global cutoff threshold less number -> less walls
      force_seed: 0 # 0 will use random seeds, any other integer will force the seed. Requires all above parameters to be fixed to produce identical results   